<!--
样式：
公共样式;
checked-color：checked时候的背景色;
nochecked-color: 未选中时候的背景色;
color:文字颜色(通过js可以修改属性);
height:checkbox高度 设置高度后宽度自动和高度一致;
font-size:字体大小(通过js可以修改属性)；
checkbox-border-radius：checkbox的边框弧度
readonly-radius:只读状态遮罩区域的弧度，一般用于有图片的时候设置


属性：
checked:选择状态(通过js可以修改属性)；
checkedimage: checkbox选中后的遮罩图片，注意使用遮罩图片后，checked-color将无效；
nocheckedimage：checkbox未选择的遮罩图片；
readonly:只读
caption:文字
value:提交值


方法：
box公共方法；
click()：模拟点击；


事件：
 change：监听checkbox方式改变，
-->
<page>
    <module>

        <![CDATA[
    
    ]]>

    </module>
    <script>
        <![CDATA[
            var document = require("Document");
            var window = require("Window");
            var time = require("Time");
            var console = require("Console");

            var Checkbox = function() {
                this.btn = null;
                this.box = null;
                this.boxcheck = null;
                this.captiondom = null;

                this.height = 30;
                this.fontSize = 16;
                this.checkedColor = "#549FF7";
                this.nocheckedColor = "#9B9C9C";
                this.readonlyRadius = 0;
                this.checkboxBorderRadius = 0;


                this.value = "";
                this.readonly = "false";
                this.caption = "";
                this.checked = "false";
                this.checkedimage = "checkbox_c.png";
                this.nocheckedimage = "checkbox.png";
                //这里标示自己在init里面初始调用的标记，如果在aq框架里面，框架会监听change事件，避免初始化的时候执行change事件
                this.taginit = true;

                this.pathLocation = "";

            };

            module.exports = Checkbox;


            Checkbox.prototype = {

                created: function() {
                    //这里是得到组件所在的uixml页面的绝对路径目录
                    this.pathLocation = document.getPathLocation();
                    this.box = this.getElement("box");
                    this.checkimage = this.getElement("checkimage");
                    this.boxcheck = this.getElement("boxcheck");
                    this.captiondom = this.getElement("caption");
                    this.readonlydom = this.getElement("readonly");
                    this.init();
                    var copythis = this;
                    this.box.on("touchUp", function(e) {
                        //  console.log("touchUp");

                        if (copythis.readonly == "false") {
                            if (copythis.checked == "true") {
                                copythis.setAttr("checked", "false");
                            } else {
                                copythis.setAttr("checked", "true");
                            }
                        }
                    });
                },
                //属性变更回调函数
                attrChanged: function(attrName, attrValue, taginit) {
                    var changetag = false;

                    if (this.taginit == false) {
                        if (taginit != true) {
                            //   console.log("能进来吗:" + attrName + ";" + attrValue + ";taginit:" + taginit);
                            if (this.getAttr(attrName) != this[attrName] && this[attrName] != null && attrValue != null) {
                                // console.log("123能进来吗:" + attrName + ";" + attrValue);
                                // this[attrName] = attrValue;

                                changetag = true;
                            }
                        }
                    }

                    if (attrName == "value") {
                        if (attrValue != null) {
                            this.value = attrValue;
                        }
                    }

                    if (attrName == "readonly") {

                        if (attrValue != null) {
                            this.readonly = attrValue;

                            if (attrValue == "true") {

                                this.readonlydom.setStyle("visibility", "visible");

                            } else {


                                this.readonlydom.setStyle("visibility", "hidden");

                            }
                        }


                    }

                    if (attrName == "checked") {


                        if (attrValue == "true") {

                            this.checkimage.setAttr("src", this.checkedimage);

                            if (this.getStyle("checked-color") != null) {
                                this.checkedColor = this.getStyle("checked-color");

                            }

                            if (this.getAttr("checkedimage") == null) {
                                this.boxcheck.setStyle("border-color", this.checkedColor);
                                this.boxcheck.setStyle("background-color", this.checkedColor);
                            }



                            this.checked = "true";
                        } else {

                            this.checkimage.setAttr("src", this.nocheckedimage);

                            if (this.getAttr("checkedimage") == null) {
                                this.boxcheck.setStyle("background-color", this.nocheckedColor);
                                this.boxcheck.setStyle("border-color", this.nocheckedColor);
                            }

                            this.checked = "false";
                        }

                    }


                    if (attrName == "caption") {
                        if (attrValue != null) {
                            this.caption = attrValue;

                        }
                        this.captiondom.setText(this.caption);
                        if (taginit == false) {
                            this.refresh();
                        }

                    }

                    if (attrName == "checkedimage") {
                        if (attrValue != null) {
                            if (attrValue.indexOf("res:") > -1 || attrValue.indexOf("http://") > -1 || attrValue.indexOf("https://") > -1) {
                                this.checkedimage = attrValue;
                            } else {
                                this.checkedimage = this.pathLocation + "/" + attrValue;
                            }
                            this.boxcheck.setStyle("background-color", "transparent");
                            this.boxcheck.setStyle("border-color", "transparent");
                            this.checkedColor = "transparent";
                            if (this.checked == "true") {
                                this.checkimage.setAttr("src", this.checkedimage);

                            }

                        }
                    }


                    if (attrName == "nocheckedimage") {
                        if (attrValue != null) {

                            if (attrValue.indexOf("res:") > -1 || attrValue.indexOf("http://") > -1 || attrValue.indexOf("https://") > -1) {
                                this.nocheckedimage = attrValue;
                            } else {
                                this.nocheckedimage = this.pathLocation + "/" + attrValue;
                            }
                            this.boxcheck.setStyle("background-color", "transparent");
                            this.boxcheck.setStyle("border-color", "transparent");
                            this.boxcheck.setStyle("border-radius", "0");
                            this.nocheckedColor = "transparent";
                            if (this.checked == "false") {
                                this.checkimage.setAttr("src", this.nocheckedimage);
                            }
                        }


                    }



                    if (changetag == true) {
                        this.fire("change");
                    }

                },
                //样式变更回调函数
                styleChanged: function(styleName, styleValue, taginit) {
                    if (styleName == "checkbox-border-radius") {
                        if (styleValue != null) {

                            this.checkboxBorderRadius = styleValue;
                            if (this.getAttr("checkedimage") == null) {
                                this.boxcheck.setStyle("border-radius", this.checkboxBorderRadius);
                                this.readonlydom.setStyle("border-radius", this.checkboxBorderRadius);

                            }
                        }
                        if (taginit == false) {
                            this.box.refresh();
                        }
                    }
                    if (styleName == "checked-color") {
                        if (styleValue != null) {

                            this.checkedColor = styleValue;
                        }
                    }

                    if (styleName == "nochecked-color") {
                        if (styleValue != null) {

                            this.nocheckedColor = styleValue;
                        }
                    }

                    if (styleName == "color") {
                        if (styleValue != null) {

                            this.color = styleValue;
                        }
                        this.captiondom.setStyle("color", this.color);

                    }
                    if (styleName == "font-size") {
                        if (styleValue != null) {

                            this.fontSize = styleValue;
                        }
                        this.captiondom.setStyle("font-size", this.fontSize);

                        if (taginit == false) {
                            this.box.refresh();
                        }


                    }


                    if (styleName == "readonly-radius") {
                        if (styleValue != null) {
                            this.readonlyRadius = styleValue;
                        }
                        this.readonlydom.setStyle("border-radius", this.readonlyRadius);
                        if (taginit == false) {
                            this.box.refresh();
                        }


                    }


                    // if (taginit == false) {
                    if (styleName == "height") {
                        //  console.log(taginit + "进来了吗" + styleValue);
                        if (styleValue != null) {
                            this.height = styleValue;

                            this.height = (this.height).replace(/(\d+).*/g, "$1");

                        }


                        this.boxcheck.setStyle("height", this.height);
                        this.boxcheck.setStyle("width", this.height);
                        this.checkimage.setStyle("height", this.height - 1);
                        this.checkimage.setStyle("width", this.height - 1);
                        this.readonlydom.setStyle("height", this.height);
                        this.readonlydom.setStyle("width", this.height);


                        if (taginit == false) {
                            this.box.refresh();
                        }


                    }
                    // }

                },
                init: function() {
                    this.taginit = true;
                    // this.setStyle("checkbox-border-radius", this.getStyle("checkbox-border-radius"));
                    this.setAttr("checked", this.getAttr("checked"));
                    // var h = this.getStyle("height");
                    //  console.log(this.getAttr("checked") + "this.getStyle(height)" + h);
                    // this.setStyle("height", "20");





                    /*this.setStyle("readonly-radius", this.getStyle("readonly-radius"));
                    this.setStyle("checked-color", this.getStyle("checked-color"));
                    this.setStyle("nochecked-color", this.getStyle("nochecked-color"));
                    this.setStyle("checkbox-border-radius", this.getStyle("checkbox-border-radius"));
                    this.setStyle("height", this.getStyle("height"));
                    this.setStyle("color", this.getStyle("color"));
                    this.setStyle("font-size", this.getStyle("font-size"));


                    this.setAttr("checked", this.getAttr("checked"));
                    this.setAttr("caption", this.getAttr("caption"));
                    this.setAttr("checkedimage", this.getAttr("checkedimage"));
                    this.setAttr("nocheckedimage", this.getAttr("nocheckedimage"));
                    this.setAttr("readonly", this.getAttr("readonly"));
                    this.setAttr("value", this.getAttr("value"));*/


                    this.taginit = false;

                },

                click: function() {

                    this.box.fire("touchUp");
                    //document.refresh();
                }
            }]]>
    </script>
    <style>
        @import url("checkbox.layout.css");
        @import url("checkbox.color.css");
    </style>
    <ui>
        <box id="box" class="checkbox">

            <box class="boxcheck" id="boxcheck">
                <image id="checkimage" />
            </box>
            <text id="caption"></text>
            <box id="readonly" style="visibility:hidden" class="readonly" />
        </box>
    </ui>
</page>